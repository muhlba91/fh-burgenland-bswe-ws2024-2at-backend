---
name: Verify

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

permissions:
  contents: read

jobs:
  conform:
    runs-on: ubuntu-latest
    name: Conform

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: siderolabs/conform@6380738b7fdfc68b208ce0674c4ac1ba314ba600 # v0.1.0-alpha.27
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  test:
    runs-on: ubuntu-latest
    name: Unit Tests
    strategy:
      max-parallel: 4
      matrix:
        java-version: ["23"]

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"
      - uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - run: ./gradlew test jacocoTestReport jacocoTestCoverageVerification

  checkstyle:
    runs-on: ubuntu-latest
    name: Checkstyle
    strategy:
      max-parallel: 4
      matrix:
        java-version: ["23"]

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"
      - uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - run: ./gradlew checkstyleMain checkstyleTest

  pmd:
    runs-on: ubuntu-latest
    name: PMD
    strategy:
      max-parallel: 4
      matrix:
        java-version: ["23"]

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"
      - uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - run: ./gradlew pmdMain pmdTest

  pitest:
    runs-on: ubuntu-latest
    name: PiTest
    strategy:
      max-parallel: 4
      matrix:
        java-version: ["23"]

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"
      - uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - run: ./gradlew pitest

  cyclonedx:
    runs-on: ubuntu-latest
    name: SBOM
    strategy:
      max-parallel: 4
      matrix:
        java-version: ["23"]

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"
      - uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - run: ./gradlew cycloneDxBom

      - uses: anchore/scan-action@7c05671ae9be166aeb155bad2d7df9121823df32 # v6
        id: anchore
        with:
          sbom: build/reports/sbom.json
          fail-build: true
          severity-cutoff: medium
        continue-on-error: true # we can skip this as informational only, in a production environment we would want to fail the build
      - uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3
        with:
          sarif_file: ${{ steps.anchore.outputs.sarif }}
        continue-on-error: true # TODO: in private repositories we do not have access to the CodeQL action, so we need to continue even if it fails

  hadolint:
    runs-on: ubuntu-latest
    name: Lint Dockerfile

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: hadolint/hadolint-action@54c9adbab1582c2ef04b2016b760714a4bfde3cf # v3.1.0
        with:
          dockerfile: Dockerfile

  yamllint:
    runs-on: ubuntu-latest
    name: YAMLLint

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - run: yamllint .

  spectral:
    runs-on: ubuntu-latest
    name: Spectral Linter

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: jaxxstorm/action-install-gh-release@25d5e2dd555cd74f1fab9ac1e6ea117acde2c0c4 # v1.12.0
        with:
          repo: stoplightio/spectral
          extension-matching: disable
          rename-to: spectral
          chmod: 0755

      - run: |
          spectral lint 'docs/**/*.yaml' --fail-severity info
          spectral lint 'docs/**/*.yml' --fail-severity info

  helmlint:
    runs-on: ubuntu-latest
    name: Lint Helm Charts

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Set up Helm
        uses: azure/setup-helm@5119fcb9089d432beecbf79bb2c7915207344b78 # v3.5

      - run: helm lint charts/*

  build:
    runs-on: ubuntu-latest
    name: Build Jar File
    needs:
      - test
      - checkstyle
      - pmd
      - pitest
      - cyclonedx
    strategy:
      max-parallel: 4
      matrix:
        java-version: ["23"]

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-java@8df1039502a15bceb9433410b1a100fbe190c53b # v4.5.0
        with:
          java-version: "${{ matrix.java-version }}"
          distribution: "corretto"
      - uses: gradle/actions/setup-gradle@d156388eb19639ec20ade50009f3d199ce1e2808 # v4.1.0

      - run: ./gradlew bootJar

      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: spring-boot-jar
          path: build/libs/fh-burgenland-bswe-ws2024-2at-backend-*.jar

  container:
    runs-on: ubuntu-latest
    name: Container
    needs:
      - build
      - hadolint
      - helmlint
    permissions:
      id-token: write
      contents: read
      packages: read

    steps:
      - uses: step-security/harden-runner@91182cccc01eb5e619899d80e4e971d6181294a7 # v2.10.1
        with:
          egress-policy: audit

      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0
      - uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1

      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: spring-boot-jar
          path: build/libs/

      - uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: false
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:${{ github.sha }}
          build-args: |
            CI_COMMIT_TIMESTAMP=${{ github.event.repository.updated_at }}
            CI_COMMIT_SHA=${{ github.sha }}
            CI_COMMIT_TAG=latest

      - uses: anchore/scan-action@7c05671ae9be166aeb155bad2d7df9121823df32 # v6
        id: anchore
        with:
          image: ghcr.io/${{ github.repository }}:${{ github.sha }}
          fail-build: true
          severity-cutoff: medium
        continue-on-error: true # we can skip this as informational only, in a production environment we would want to fail the build
      - uses: github/codeql-action/upload-sarif@9e8d0789d4a0fa9ceb6b1738f7e269594bdd67f0 # v3
        with:
          sarif_file: ${{ steps.anchore.outputs.sarif }}
        continue-on-error: true # TODO: in private repositories we do not have access to the CodeQL action, so we need to continue even if it fails
